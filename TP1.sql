-- TP numéro 1
-- ED
-- BRIERE
-- CYRILLE

-- Exercice 1

-- a
SELECT EMP.DEPTNO, EMP.ENAME, EMP.SAL, rank() over (partition by DEPTNO order by EMP.SAL DESC) as RANG
FROM EMP
WHERE EMP.DEPTNO IN (10,30)
ORDER BY EMP.DEPTNO, EMP.SAL DESC;


-- b
SELECT EMP.DEPTNO, EMP.ENAME, EMP.SAL, dense_rank() over (partition by DEPTNO order by EMP.SAL DESC) as RANG
FROM EMP
WHERE EMP.DEPTNO IN (10,30)
ORDER BY EMP.DEPTNO, EMP.SAL DESC;

-- c
SELECT DISTINCT EMP.DEPTNO, EMP.SAL, dense_rank() over (partition by DEPTNO order by EMP.SAL DESC) as RANG
FROM EMP
WHERE EMP.DEPTNO IN (10,20)
ORDER BY EMP.DEPTNO, EMP.SAL DESC;

-- d
SELECT EMP.JOB, sum(EMP.SAL) as TOT_SAL_JOB
FROM EMP
GROUP BY EMP.JOB;

-- d bis
SELECT distinct EMP.JOB,  sum(EMP.SAL) over (partition by EMP.JOB order by EMP.JOB) as TOT_SAL_JOB
FROM EMP;

-- e
--Partition by ne va pas modifier le nombre de ligne contraitement à un GROUP BY

-- f
SELECT EMP.DEPTNO, EMP.JOB, SUM(EMP.SAL)
FROM EMP
GROUP BY ROLLUP(EMP.DEPTNO, EMP.JOB)
ORDER BY EMP.DEPTNO;

-- g
SELECT CASE WHEN EMP.DEPTNO IS NULL THEN 'TousDep' ELSE TO_CHAR(EMP.DEPTNO) END DEPARTEMENT, CASE WHEN EMP.JOB IS NULL THEN 'TousEmployés' ELSE TO_CHAR(EMP.JOB) END JOB, SUM(EMP.SAL)
FROM EMP
GROUP BY ROLLUP(EMP.DEPTNO, EMP.JOB)
ORDER BY EMP.DEPTNO ASC, SUM(EMP.SAL) DESC;

-- g
SELECT coalesce(to_char(EMP.DEPTNO),'TousDep') DEPARTEMENT, coalesce(to_char(EMP.JOB),'TousEmployés') JOB, SUM(EMP.SAL)
FROM EMP
GROUP BY ROLLUP(EMP.DEPTNO, EMP.JOB)
ORDER BY EMP.DEPTNO ASC, SUM(EMP.SAL) DESC;

-- EXERCICE 2
--1

SELECT TEMPS.ANNEE, CLIENTS.CL_R, PRODUITS.CATEGORY, avg(QTE*PU)
FROM VENTES
JOIN TEMPS ON VENTES.TID=TEMPS.TID
JOIN PRODUITS ON VENTES.PID=PRODUITS.PID
JOIN CLIENTS ON VENTES.CID=CLIENTS.CL_ID
WHERE TEMPS.ANNEE IN (2009,2010)
GROUP BY ROLLUP(TEMPS.ANNEE, CLIENTS.CL_R, PRODUITS.CATEGORY);

SELECT TEMPS.ANNEE, CLIENTS.CL_R, avg(QTE*PU)
FROM VENTES
JOIN TEMPS ON VENTES.TID=TEMPS.TID
JOIN CLIENTS ON VENTES.CID=CLIENTS.CL_ID
WHERE TEMPS.ANNEE IN (2009,2010)
GROUP BY ROLLUP(TEMPS.ANNEE, CLIENTS.CL_R);

SELECT TEMPS.ANNEE, avg(QTE*PU)
FROM VENTES
JOIN TEMPS ON VENTES.TID=TEMPS.TID
WHERE TEMPS.ANNEE IN (2009,2010)
GROUP BY ROLLUP(TEMPS.ANNEE);

--2

SELECT TEMPS.ANNEE, CLIENTS.CL_R, PRODUITS.CATEGORY, avg(VENTES.QTE*VENTES.PU) CA_MOYEN
FROM VENTES
JOIN TEMPS ON VENTES.TID=TEMPS.TID
JOIN CLIENTS ON VENTES.CID=CLIENTS.CL_ID
JOIN PRODUITS ON VENTES.PID=PRODUITS.PID 
WHERE TEMPS.ANNEE IN (2009,2010)
GROUP BY CUBE(TEMPS.ANNEE, CLIENTS.CL_R, PRODUITS.CATEGORY);


--4

SELECT ANNEE, CATEGORY, CA_TOTAL
FROM
(
  SELECT TEMPS.ANNEE, PRODUITS.CATEGORY, SUM(VENTES.QTE*VENTES.PU) CA_TOTAL, GROUPING_ID(TEMPS.ANNEE, PRODUITS.CATEGORY) G_ID
  FROM VENTES
  JOIN TEMPS ON VENTES.TID=TEMPS.TID
  JOIN CLIENTS ON VENTES.CID=CLIENTS.CL_ID
  JOIN PRODUITS ON VENTES.PID=PRODUITS.PID 
  GROUP BY CUBE (TEMPS.ANNEE, PRODUITS.CATEGORY)
  HAVING GROUPING_ID(TEMPS.ANNEE, PRODUITS.CATEGORY) IN (0,1)
  ORDER BY TEMPS.ANNEE, CA_TOTAL DESC
);





